POTD : 30 OCTOBER 2023

EASY : 

SOLUTION : 

JAVA : 



MEDIUM : https://www.codingninjas.com/studio/problems/digit-product_2826440

SOLUTION : 

JAVA : 
//Note not mine 
import java.util.* ;
import java.io.*; 

public class Solution {

	public static int digitProduct(int n) {
		// Write your code here.
		int res = 0;
		ArrayList<Integer>ans = new ArrayList<>();
		for(int i = 9; i>=2; i--){
			while(n%i==0){
				ans.add(i);
				n/=i;
			}
		}
		if(n>9)return -1;

		for(int i = ans.size()-1; i>=0; i--){
			res= res*10 + ans.get(i);
		}
		return res;
	}

}


HARD : https://www.codingninjas.com/studio/problems/beautiful-xor-pairs_1382115

SOLUTION : 

JAVA : 

//This is a trie problem but still my code works due to
less optimize by platform

import java.util.* ;
import java.io.*; 
import java.util.ArrayList;

public class Solution {
    public static int countBeautifulPairs(ArrayList<Integer> arr, int low, int high) {
        // Write your code here.
        int res = 0;
        int n = arr.size();
        for(int i = 0; i<n; i++){
            for(int j = i+1; j<n; j++){
                int check = arr.get(i)^arr.get(j);
                if(check>=low && check<=high)res++;
            }
        }
        return res;
    }
}