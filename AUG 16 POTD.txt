POTD: 16 August 2023

EASY : https://www.codingninjas.com/studio/problems/easy_6613920


SOLUTION : 

JAVA:
import java.util.* ;
import java.io.*; 
public class Solution {
	public static int maxAreaContainer(ArrayList<Integer> arr) {
		// Write your code here.
		int res = 0;
		int n = arr.size();
		// for(int i = 0; i<n; i++){
		// 	for(int j = i+1; j<n; j++){
		// 		int temp = Math.min(arr.get(i),arr.get(j));
		// 		int total = temp*(j-i);
		// 		res = Math.max(res,total);
		// 	}
		// }
		int low = 0;
		int high = n-1;
		while(low<high){
			int low_value = Math.min(arr.get(low),arr.get(high));
			int diff = high-low;
			res = Math.max(diff*low_value,res);
			if(arr.get(low)<arr.get(high)){
				low++;
			}else high--;
		}
		return res;
	}
}


MEDUIM : 

SOLUTION : 
JAVA:

import java.util.* ;
import java.io.*; 
public class Solution 
{
	public static ArrayList<Double> sampleStats(ArrayList<Integer> count) 
    {
		// Write your code here.
		ArrayList<Integer> array = new ArrayList<>();
        int total_sum = 0;
        int count_last = 0;
        int no = -1;
        for(int i = 0; i<256; i++){
            if(count.get(i)!=0){
                int temp = count.get(i);
                int count_in = 0;
                while(temp-->0){
                    count_in++;
                    total_sum+=(i);
                    array.add(i);
                }
                if(count_in>count_last){
                    no = i;
                    count_last = count_in;
                }
            }
        }
        ArrayList<Double>res = new ArrayList<>();
        int size = array.size();
        Double low = array.get(0)*1.0;
        res.add(low);
        Double max = array.get(size-1)*1.0;
        res.add(max);
        Double mean = total_sum*1.0/size;
        res.add(mean);
        if(size%2!=0){
            Double median = array.get(size/2)*1.0;
            res.add(median);
        }else{
            Double median = (array.get(size/2)*1.0+array.get((size/2)-1)*1.0)/2;
            res.add(median);
        }
        double mode = no*1.0;
        res.add(mode);
        return res;
	}
}

NOTE : OF MEDIUM GETTING TLE